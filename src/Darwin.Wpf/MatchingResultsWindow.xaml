<!--
This file is part of DARWIN.
Copyright (C) 1994 - 2020

DARWIN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

DARWIN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with DARWIN.  If not, see https://www.gnu.org/licenses/
-->
<Window x:Class="Darwin.Wpf.MatchingResultsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:Darwin.Wpf.Controls"
        xmlns:converters="clr-namespace:Darwin.Wpf.ValueConverters"
        xmlns:fe="clr-namespace:Darwin.Wpf.FrameworkElements"
        xmlns:local="clr-namespace:Darwin.Wpf"
        mc:Ignorable="d" Background="{StaticResource LightBackground}"
        Title="Matching Results" Height="850" Width="1050" MinHeight="550" MinWidth="600"
        WindowStartupLocation="Manual" Left="20" Top="0"> 
    <Window.Resources>
        <x:Array Type="Brush" x:Key="brushes">
            <x:Static Member="Brushes.Crimson" />
            <x:Static Member="Brushes.Crimson" />
            <x:Static Member="Brushes.Yellow" />
            <x:Static Member="Brushes.Cyan" />
            <x:Static Member="Brushes.Blue" />
            <x:Static Member="Brushes.Magenta" />
        </x:Array>
        <x:Array Type="Brush" x:Key="dbBrushes">
            <x:Static Member="Brushes.Lime" />
            <x:Static Member="Brushes.Crimson" />
            <x:Static Member="Brushes.Yellow" />
            <x:Static Member="Brushes.Cyan" />
            <x:Static Member="Brushes.Blue" />
            <x:Static Member="Brushes.Magenta" />
        </x:Array>
        <converters:NullConverter x:Key="NullConverter" />
        <converters:ComparisonConverter x:Key="ComparisonConverter" />
        <converters:GridViewColumnWidthConverter x:Key="GridViewColumnWidthConverter"/>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="5" />
            <RowDefinition Height="350" MinHeight="200" />
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <Grid Grid.Row="0" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label Grid.Row="0" Content="{Binding SelectedLabelText}" />
            <Button Grid.Row="1" x:Name="ViewSelectedImageButton" Click="ViewSelectedImageButton_Click" Cursor="Hand" Margin="0" Padding="1" Background="Transparent" BorderThickness="0">
                <Image x:Name="SelectedImage" Source="{Binding Path=SelectedImageSource}" />
            </Button>
            <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="10,10,10,10" HorizontalAlignment="Center">
                <ToggleButton x:Name="SelectedShowOriginalImage" IsChecked="{Binding SelectedShowOriginalImage}">
                    Show Original Image
                </ToggleButton>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="0" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label Grid.Row="0" Content="{Binding UnknownLabelText}" />
            <Button Grid.Row="1" x:Name="ViewUnknownImageButton" Click="ViewUnknownImageButton_Click" Cursor="Hand" Margin="0" Padding="1" Background="Transparent" BorderThickness="0">
                <Image x:Name="UnknownImage" Source="{Binding Path=UnknownImageSource}" />
            </Button>
            <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="10,10,10,10" HorizontalAlignment="Center">
                <ToggleButton x:Name="UnknownShowOriginalImage" IsChecked="{Binding UnknownShowOriginalImage}">
                    Show Original Image
                </ToggleButton>
                <Button x:Name="UnknownMatchSelectedFinOrientation" Click="UnknownMatchSelectedFinOrientation_Click" Content="{Binding MatchSelectedOrientationText}" />
            </StackPanel>
        </Grid>

        <GridSplitter Height="5" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" />

        <Grid Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2" VerticalAlignment="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="400" />
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Row="0" Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <controls:SortableListView Grid.Row="0" x:Name="DatabaseGrid" SelectionMode="Single" SelectedItem="{Binding SelectedResult}" SelectionChanged="DatabaseGrid_SelectionChanged" ItemsSource="{Binding Path=MatchResults.Results}" GridViewColumnHeader.Click="GridHeader_Click">
                    <ListView.View>
                        <GridView x:Name="GridView">
                            <GridViewColumn DisplayMemberBinding="{Binding Rank}" Width="40">
                                <GridViewColumnHeader Content="Rank" Padding="5,0,0,0" HorizontalContentAlignment="Left" />
                            </GridViewColumn>
                            <GridViewColumn DisplayMemberBinding="{Binding Confidence, StringFormat=P}">
                                <GridViewColumnHeader
                                    Content="Match" Padding="5,0,0,0" HorizontalContentAlignment="Left"
                                    MinWidth="50"/>
                            </GridViewColumn>
                            <GridViewColumn>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Image Height="40" HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <Image.Source>
                                                <BitmapImage DecodePixelHeight="40" UriSource="{Binding Path=ThumbnailFilenameUri}" />
                                            </Image.Source>
                                        </Image>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn DisplayMemberBinding="{Binding IDCode}">
                                <GridViewColumnHeader
                                    Content="ID Code" Padding="5,0,0,0" HorizontalContentAlignment="Left"
                                    MinWidth="55"/>
                            </GridViewColumn>
                            <GridViewColumn DisplayMemberBinding="{Binding Name}">
                                <GridViewColumnHeader Content="Name" Padding="5,0,0,0" HorizontalContentAlignment="Left"
                                        MinWidth="50"/>
                            </GridViewColumn>
                            <GridViewColumn DisplayMemberBinding="{Binding DateOfSighting}">
                                <GridViewColumnHeader
                                    Content="Date" Padding="5,0,0,0" HorizontalContentAlignment="Left"
                                    MinWidth="50"/>
                            </GridViewColumn>
                            <GridViewColumn DisplayMemberBinding="{Binding LocationCode}">
                                <GridViewColumnHeader
                                    Content="Location" Padding="5,0,0,0" HorizontalContentAlignment="Left"
                                    MinWidth="60" />
                            </GridViewColumn>
                            <GridViewColumn DisplayMemberBinding="{Binding DamageCategory}">
                                <GridViewColumnHeader
                                    Content="Damage" Padding="5,0,0,0" HorizontalContentAlignment="Left"
                                    MinWidth="50"/>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </controls:SortableListView>

                <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" Margin="10,5,0,10">
                    <ToggleButton x:Name="InfoButton" IsChecked="{Binding Path=ShowInfoColumns, Converter={StaticResource InverseBooleanConverter}}" ToolTip="Show/hide information fields (date, location, category, error)" Click="InfoButton_Click">
                        Hide Info
                    </ToggleButton>
                    <ToggleButton x:Name="HideIDsButton" IsChecked="{Binding Path=ShowIDColumn, Converter={StaticResource InverseBooleanConverter}}" ToolTip="Click here to show/hide ID codes" Click="HideIDsButton_Click">
                        Hide IDs
                    </ToggleButton>
                    <Button x:Name="PreviousButton" Click="PreviousButton_Click" IsEnabled="{Binding PreviousEnabled}" ToolTip="Cycle to the previous match result">
                        Previous
                    </Button>
                    <Button x:Name="NextButton" Click="NextButton_Click" IsEnabled="{Binding NextEnabled}" ToolTip="Cycle to the next match result">
                        Next
                    </Button>
                    <ToggleButton x:Name="AutoScrollButton" IsChecked="{Binding Path=AutoScroll}" Click="AutoScrollButton_Click">
                        <ToggleButton.ToolTip>
                            <TextBlock>
                                    Start or stop an automatically scrolling<LineBreak/>
                                    slide show of selected <Run Text="{Binding IndividualTerminology,Mode=OneWay}"/>s
                            </TextBlock>
                        </ToggleButton.ToolTip>
                        Auto Scroll
                    </ToggleButton>
                </StackPanel>
            </Grid>

            <GridSplitter Grid.Row="0" Grid.Column="1" Width="5" HorizontalAlignment="Stretch"/>

            <Grid Grid.Row="0" Grid.Column="2" Margin="10,0,10,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Label Grid.Row="0">Registered Outlines</Label>
                <Viewbox Grid.Row="1">
                    <Button x:Name="ViewOutlineInformationButton" Click="ViewOutlineInformationButton_Click" Cursor="Hand" Background="Transparent" BorderThickness="0">
                        <Grid>
                            <fe:PointVisuals x:Name="UnknownContourVisuals" IsHitTestVisible="False" Width="{Binding ContourWidth}" Height="{Binding ContourHeight}"
                                                 Background="Transparent"
                                                 PointSize="1"
                                                 XOffset="{Binding ContourXOffset}"
                                                 YOffset="{Binding ContourYOffset}"
                                                 ContourScale="{Binding UnknownContour.Scale}"
                                                 ItemsSource="{Binding UnknownContour.Points}"     
                                                 Brushes="{StaticResource brushes}" />

                            <fe:PointVisuals IsHitTestVisible="False" Width="{Binding ContourWidth}" Height="{Binding ContourHeight}"
                                                 Background="Transparent"
                                                 PointSize="1"
                                                 XOffset="{Binding ContourXOffset}"
                                                 YOffset="{Binding ContourYOffset}"
                                                 ContourScale="{Binding DBContour.Scale}"
                                                 ItemsSource="{Binding DBContour.Points}"     
                                                 Brushes="{StaticResource dbBrushes}" />
                        </Grid>
                    </Button>
                </Viewbox>
            </Grid>
        </Grid>

        <StackPanel Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="15">
            <Button x:Name="MatchesSelectedFinButton" Click="MatchesSelectedFinButton_Click">
                <Button.ToolTip>
                    <TextBlock>
                            The selected <Run Text="{Binding IndividualTerminology,Mode=OneWay}"/> matches the unknown <Run Text="{Binding IndividualTerminology,Mode=OneWay}"/>.  Add the<LineBreak/>
                            unknown <Run Text="{Binding IndividualTerminology,Mode=OneWay}"/> image to the database as an alternate<LineBreak/>
                            image of the selected <Run Text="{Binding IndividualTerminology,Mode=OneWay}"/>.  Save sighting data, if desired.
                    </TextBlock>
                </Button.ToolTip>
                <Run Text="{Binding MatchesText,Mode=OneWay}" />
            </Button>
            <Button x:Name="NoMatchNewFinButton" Click="NoMatchNewFinButton_Click">
                <Button.ToolTip>
                    <TextBlock>
                            No matches for the unknown <Run Text="{Binding IndividualTerminology,Mode=OneWay}"/>.  Add this unknown <Run Text="{Binding IndividualTerminology,Mode=OneWay}"/><LineBreak/>
                            to the database as a new entry.  Save the sighting data, if<LineBreak/>
                            desired.
                    </TextBlock>
                </Button.ToolTip>
                <Run Text="{Binding NoMatchText,Mode=OneWay}"/>
            </Button>
            <Button x:Name="ReturnToMatchingDialogButton" Click="ReturnToMatchingDialogButton_Click">
                <Button.ToolTip>
                    <TextBlock>
                            Return to the Matching window, so another<LineBreak/>
                            match technique can be initiated with the same<LineBreak/>
                            unknown.
                    </TextBlock>
                </Button.ToolTip>
                Return to Matching Options
            </Button>
            <Button x:Name="SaveMatchResultsButton" Click="SaveMatchResultsButton_Click">
                <Button.ToolTip>
                    <TextBlock>
                            Save the match results for future review or match confirmation
                    </TextBlock>
                </Button.ToolTip>
                Save Match Results
            </Button>
            <Button x:Name="DoneButton" Click="DoneButton_Click">
                Close and Discard
            </Button>
        </StackPanel>
    </Grid>
</Window>
